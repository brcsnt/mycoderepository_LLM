import pandas as pd
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score

def generate_confusion_matrix(data, output_col, flag_col):
    # Extract the true values and predictions
    y_true = data[flag_col]
    y_pred = data[output_col]
    
    # Detect the unique classes automatically
    classes = sorted(y_true.unique())
    
    # Generate confusion matrix
    cm = confusion_matrix(y_true, y_pred, labels=classes)
    
    # Calculate metrics using the first detected class as the positive class
    pos_label = classes[0]
    
    accuracy = accuracy_score(y_true, y_pred)
    precision = precision_score(y_true, y_pred, pos_label=pos_label)
    recall = recall_score(y_true, y_pred, pos_label=pos_label)
    f1 = f1_score(y_true, y_pred, pos_label=pos_label)
    
    # Print the confusion matrix and metrics
    print("Confusion Matrix:")
    print(cm)
    print("\nAccuracy:", round(accuracy, 4))
    print("Precision:", round(precision, 4))
    print("Recall:", round(recall, 4))
    print("F1 Score:", round(f1, 4))

# Example usage
# Replace 'your_data.csv' with your dataset file path
data = pd.read_csv('your_data.csv')  
generate_confusion_matrix(data, 'Output', 'flag')
